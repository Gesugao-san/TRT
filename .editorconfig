# =====================================================================
# EditorConfig Configuration
# =====================================================================
#
# Зачем этот файл?
# 1. Единый стиль кода для всей команды
#    - Автоматическое применение правил форматирования
#    - Независимость от настроек IDE/редакторов разработчиков
#
# 2. Синхронизация с системой контроля версий
#    - Согласование с .gitattributes (переносы строк, кодировка)
#    - Если end_of_line не указан, используется автоопределение из .gitattributes
#    - Предотвращение "мусорных" изменений в коммитах
#
# 3. Поддержка всех современных редакторов:
#    - VS Code, IntelliJ, Vim, Sublime Text и др.
#    - Работает даже без плагинов (но с ними - удобнее)
#
# Ключевые возможности:
#   - Управление отступами (пробелы/табы, размер)
#   - Контроль символов переноса строк (LF/CRLF)
#   - Настройки кодировки (UTF-8/BOM)
#   - Управление завершающими пробелами
#
# Полная документация: https://editorconfig.org
# Спецификация: https://spec.editorconfig.org
#
# Важно! Требует EditorConfig-плагина в вашем редакторе.
# Для VS Code: https://marketplace.visualstudio.com/items?itemName=EditorConfig.EditorConfig
# =====================================================================

# Флаг, указывающий, что этот файл является корневым для проекта.
# Когда установлено значение true:
# 1. Редактор прекращает поиск других файлов .editorconfig в родительских директориях
# 2. Все настройки применяются только в рамках текущей директории и её поддиректорий
# 3. Гарантируется, что правила не будут конфликтовать с глобальными настройками системы
#
# Особенно важно использовать в случаях:
# - Когда проект может быть размещён в произвольной директории
# - Для предотвращения наследования нежелательных настроек из родительских папок
# - В монорепозиториях с несколькими независимыми подпроектами
#
# Всегда должен присутствовать в корневом .editorconfig проекта
root = true

# Общие настройки для всех файлов в проекте
[*]

# Использовать пробелы вместо табуляции для отступов:
# - Обеспечивает единообразное отображение в любом редакторе
# - Исключает проблемы с разной шириной табов в разных IDE
# - Размер отступа контролируется параметром indent_size
indent_style = space

# Не удалять пробелы в конце строк:
# - Сохраняет значимые пробелы (например, в Markdown)
# - Не нарушает выравнивание в комментариях и таблицах
# - Для чистого кода можно установить true в отдельных секциях
trim_trailing_whitespace = false

# Всегда добавлять пустую строку в конце файла:
# - Соответствует POSIX-стандарту
# - Упрощает работу с git diff (последняя строка отображается корректно)
# - Предотвращает проблемы с некоторыми компиляторами и интерпретаторами
# - Облегчает конкатенацию файлов
insert_final_newline = true

# Если end_of_line не указан явно, редактор будет использовать:
# 1. Автоопределение из .gitattributes (если файл существует)
# 2. Системные настройки по умолчанию (LF для Unix, CRLF для Windows)

# Вложения поддерживаются в EditorConfig ≥ 2.5.0 (2022)
# Поддерживается в VS Code с плагином v1.1.1+ и в IntelliJ IDEA 2022.3+
[.{git{attributes,ignore},editorconfig}]
charset = utf-8

[*.xml]
charset     = utf-8-bom
end_of_line = crlf  # Явное указание для Windows-ориентированных XML-файлов
indent_size = 2

[*.{lua,json}]
charset     = utf-8
indent_size = 4

[*.md]
charset     = utf-8
indent_size = 2
